sha,filename,url,lines,title,comment,priority,category,additional,id,private
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\main.pl","","1:0-1:16","remove","It is easier to run the code manually in tkeclipse if it is not in a module.\nSo remove this module. You can still have separate files without using modules which should really be reserved for things that are truly separate where some form of information hiding is useful. \nSo utils and expressions should not be modules either","2","Best Practices","","d7354acb-21c9-4f66-b65d-df01244218ee","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\main.pl","","11:0-11:25","obscure","I do not understand the effect of this. Why is it needed? What does it do?\nIt probably needs to be removed and whaever problem you had handled differently","2","Code-Style","","49ef65df-ed8e-47fa-ba71-56b606a88e16","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\main.pl","","32:0-35:73","Rewrite","This is really too short to be a separate predicate and it is only called once. \n\nBetter practice would be to merge it back into main/2 ","2","Best Practices","","04be62d4-73ca-4ecc-a455-624cf936d3c6","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\main.pl","","52:0-54:23","Clarity","2 remarks:\n-according to the document of asserta/1 https://eclipseclp.org/doc/bips/kernel/dynamic/asserta-1.html the predicate asserted need to be delcared dynamic\n-you really have to document the use of these predicates: what do they represent, what is their format? Best to do that when you delcare them as dynamic","0","Best Practices","","43fe32dc-04f8-411b-8346-1968356772e8","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\main.pl","","40:0-51:56","Handling of test drivers","Some remarks on the testdrivers generated\n- they are best generated in a timestamped folder e.g. function_name_date_time_generated as this is very useful for regression and debugging\n- they should not be deleted: create in a new folder as mentioned above ","2","Architecture","","a25eb4ef-fc12-4d55-ba01-8758468d4204","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\main.pl","","40:0-40:18","Rename","rename setup_test_driver?","2","Best Practices","","733e7c83-03f3-4ec9-89fa-7399f58cfeb8","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\main.pl","","35:4-35:20","Comprehension","What does this do? Where is it defined? Hard to follow","2","Best Practices","","676ee09c-a132-4141-b5c4-01f285cac108","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\main.pl","","57:0-57:5","Comprehension","Where is this used?","2","Best Practices","","0b86b67e-3876-4a34-9069-d6f3ff86678c","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\statement_handler.pl","","3:0-3:28","Comprehension","What does this do? ","2","Best Practices","","a4845be3-6743-47f0-aa3d-7f07fd09ca35","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\statement_handler.pl","","11:4-11:14","comprehension","What exactly do you measn by concretise? I am not familiar wit hthis term in Prolog nor symbolic execution so it makes understanding difficult.\nWhere is that predicate?","0","Best Practices","","8bc8a456-3b4b-433d-aede-7f71942272d1","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\statement_handler.pl","","32:19-32:22","comprehension","systematically abbreviating the components of a list as Head and Tail does not help much, it is a wasted opportunity to document. What is H in this context? A statement? If so call it Statement and L Statement_list or Statement_rest or Rest","2","Best Practices","","55d31ff2-595a-4cac-8806-4836b91d438a","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\statement_handler.pl","","66:41-66:66","reformat","rather than returning an anonymous list return a compound such as\nreturn(Return_value, Return_type) in case os a return, and 'false' otherwise ","3","Best Practices","","c5dd6de5-3401-48cd-89dc-9c47922ded8b","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\statement_handler.pl","","33:14-33:32","best practice","See other comment below: this should not be logically, a list.","2","Best Practices","","584f8b94-1e79-4a83-8531-831bc1547402","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\statement_handler.pl","","31:0-31:17","rename","So why not rename statement_handler to handle and get rid of this special case?\n","2","Best Practices","","fa0b8957-95be-4af3-8e96-adeb485d07ce","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\statement_handler.pl","","49:0-51:28","rename","Why this extra level of direction? Just handle the declartions here rather than in a seperate file","2","Best Practices","","d3e2f60e-31be-4cfb-ad4c-240ad08e762b","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\statement_handler.pl","","55:0-55:36","logical error?","I am surprised this works.\n    evaluate_expression(Constraint), needs to be brought in inside the first choice point otherwise the ptc_solver with get Constraint and on backtracking not(Constraint) which will always fail...","3","Architecture","","686801b1-4c3d-474d-b350-ce3722f09876","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\statement_handler.pl","","75:0-78:27","comprehension","this kind of things (you do it in several places abaove) is not really Prolog style (they look like assignments). Don't introduce intermediary variables if they can be avoided.\nBetter rewritten as:\n\nhandle(return, [true, void, _]) :-\n    writeln(""Void Return"").\n\nor as mentioned above\n\nhandle(return, return(true, void, _)) :-\n    writeln(""Void Return"").\n\nor such like","2","Best Practices","","56a8a742-6606-4b67-8736-aed51209d9f6","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\statement_handler.pl","","19:0-19:38","naming","I can't get my head around why a parameter handler gets a list of statements, are they not declarations and thus they should be renamed.","0","Best Practices","","785f77f1-3227-4f78-955d-b00d5274ea27","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\expressions.pl","","38:0-41:46","renaming","remove all these intermediary variables rewrite as:\nevaluate_expression(andop(Left, Right), Left_Result and_then Right_result) :-\n    evaluate_expression(Left, Left_Result),\n    evaluate_expression(Right, Right_result).","0","Best Practices","","a9295b99-9a98-42bd-8c0b-7c8694a4538e","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\expressions.pl","","86:3-86:27","comprehension","why?","2","Best Practices","","b612bab1-0f7d-494a-b589-3ab05a54f2cb","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\expressions.pl","","32:0-33:49","remove","Remove this comment. It is not a hack, it is normal behaviour, if it a variable it will match everything.","1","Best Practices","","7cfdf12e-2ece-4f04-9524-e6dad224cfaa","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\expressions.pl","","36:3-36:5","add check","Add a check to see if the expression is a variable as this clause only applies when it a is a variable.","2","Best Practices","","e74b29f1-9b74-4750-b657-442cd1043122","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\expressions.pl","","20:0-30:6","wrong place","I don't think these shopuld be done here. Best to do it when handling statements (e.g. a if statement). It is clearer","2","Best Practices","","b3d980d1-23cc-4982-b5a0-70e0e2386125","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\expressions.pl","","132:0-147:6","move up","Move these to the top, cloe to the handling of variables. This is help clarity","1","Code-Style","","117f923b-b4a6-4d8b-93cc-b2110ceafbea","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\expressions.pl","","142:11-142:71","explain","What is this? Why?","2","Best Practices","","9b14ece1-33ee-4d27-8c4a-a0b2b0951fbe","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\declaration.pl","","20:15-20:34","remove","Remove this intermediate variable","2","Best Practices","","c0e7fb0a-3dde-411a-a78b-3072f37f7eb6","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\c_var.pl","","12:10-12:45","comprehension","Need better explaining than this.\nType: type of the C variable\nIn: the input valuf of the C varaible\netc.","2","Best Practices","","15e7e338-6713-4cba-8589-31dac3713adc","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\declaration.pl","","15:18-15:26","rename","A better name?\nC_Variable?\n","0","Best Practices","","9584cf9f-5471-4eb9-8aa8-978643653045","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\declaration.pl","","16:4-16:39","understanding","why do you create a copy of the varaible just to get the name?","0","Best Practices","","dec5f783-c02d-416d-bc05-4b7c3550669b","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\c_var.pl","","44:8-44:27","change","As mentioned,\nbest displaying c_var(Name) in the debugger rather than just Name","2","Best Practices","","3fe28253-fca8-409a-a30a-4392f79e0480","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\c_var.pl","","42:63-42:85","remove","Remove this comment?","1","Code-Style","","dcffed5e-b96e-4761-9c7c-e422775fc5a2","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\utils.pl","","12:0-21:6","Surgery","I don't really understand what is going on here.\nmostly because of lack of documentation\n","3","Architecture","","132f9f6e-df8a-4f43-bfdc-ca29046ab092","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\utils.pl","","7:11-7:26","conprehension","why is this dyanmic?","2","Best Practices","","f398d861-ae45-4c8d-8739-0be3ac49e5a9","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\utils.pl","","8:11-8:20","confusing","Why is this dynamic but not used and not documented: what is it?","0","Code-Style","","559afaff-ae69-4158-af90-a030f35393e6","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\concretise.pl","","13:0-13:24","not a special case","This is not a special case, remove the comment and and make it part of the other 'concretise'","0","Code-Style","","fc80df8f-4d83-40c3-a2d4-d273173a8a03","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\concretise.pl","","41:0-51:6","?","Yes, I do not understnd why this would be needed.\n","0","Code-Style","","c62e73ea-b175-4ba8-aa67-cc74400b5d76","0"
"b4771e06b6537d747945f955b6adca3608049bad","\Prolog\concretise.pl","","34:0-39:21","issue","As mentionned,\nall the integer varaibles that need labeling need to be sent at the time in one go to the solver and not one by one.\n\nThis is for optimisation purposes wuithin the solver. This is important for efficiency purposes.","3","Performance","","4a77a216-fbda-4a51-9233-42047409bd83","0"
