sha,filename,url,lines,title,comment,priority,category,additional,id,private
"94cf7a89d56a2dd7232adb3273982a3822d9b145","/Prolog/main.pl","","67:0-69:20","surely this should always be done","clean should probably always be called: loks like teh streams are left open?\n\nLILY: This is a predicate called during development, they streams are normally closed as needed in standard runs. During development, a change may break a predicate and leave streams open, this predicate is used for that case","2","Best Practices","","ada27956-4ffe-4e0b-85f7-b64865ea00c9","1"
"52cd58f9981ccacbb9c757b87036d0073944527c","/Prolog/label.pl","","95:0-129:81","","I am not worried about arrays but there's way too much repeated code here","0","","","0ce83e7b-e2d2-4517-9434-6330079f7627","1"
"62a3480e2f5ed5759430cf6c84818939c012c6ed","/Prolog/label.pl","","19:0-29:0","","Again I am not worried about arrays, but this is wrong ALL integers must be sent to the solver for labelling in one go, including arrays elements\n","0","","","d35e13c8-8fb3-4185-a37a-783fc18e2f4c","0"
"efb885a8f623022e1f029e24d4efdddf6f7aee80","/Prolog/label.pl","","85:12-85:34","","I don't understand why this is needed. When is it called?\nalso utils__evaluate_to_int would be redundant and could be removed","2","Code-Style","","0cfd6677-27b8-4f92-94b6-be47f1536735","0"
"94cf7a89d56a2dd7232adb3273982a3822d9b145","/Prolog/statement_handler.pl","","18:0-18:49","","I am confused.\nWhat happens when it is void?\n\nLILY: If a function has no arguments, the atom void is output by the parser. Here, it fails to match to a declaration predicate as it is not using the standard: declaration(Type,[]) format, instead being the atom: void. This filters out the void case","0","","","066fe4ef-e2ee-4dbd-a576-ec23e6eeb64d","1"
"2f373660070f79c42f37bea52d719877d6dd1672","/Prolog/statement_handler.pl","","125:0-143:49","","? What do these do? Work in progress?\n\nLILY: They are in the Expression variable, and are capable of being passed directly to the handle(assignment) predicate","0","","","f8de0b41-4ce7-403c-9d81-0d11fe647a4d","1"
"52cd58f9981ccacbb9c757b87036d0073944527c","/Prolog/statement_handler.pl","","71:0-71:56","","I fail to understand how this will work for function that do no return a result or modifies global variables.","0","","","303d7fe7-3ab0-4dfa-ba8d-2ba79dd45bbd","1"
"52cd58f9981ccacbb9c757b87036d0073944527c","/Prolog/expressions.pl","","20:4-20:19","","Why is this a special case? \nWould be clearer if ptc_solver__sdl was called within the if_statement handler","0","","","218dcf4c-3c4e-4f38-93aa-7a3933ec8afa","1"
"52cd58f9981ccacbb9c757b87036d0073944527c","/Prolog/statement_handler.pl","","12:4-12:31","Labelling","You seem to klabel 'on returns' and later you label the params?\nThis needs to be reviewec: at the end of a path all the in variables need to be passed together for labelling to the PTC Solver","0","Architecture","","fd3ccb92-fff7-461f-8b47-ba7fe788affd","1"
"d2253273dd1d07be34f56fccc1e5833cbc6a38f1","\Prolog\main.pl","","113:0-115:27","","Is this just testing for the right type? \nShould output error message if not. ","0","Best Practices","","7cbedec5-ffe4-43ec-9dec-979e3700e2b0","0"
"d2253273dd1d07be34f56fccc1e5833cbc6a38f1","\Prolog\main.pl","","215:19-215:89","","Avoid this style in Prolog, just call\nfunction_info__create(function_definition(Stripped_function_name, Params, Body, Return_type), Function_info),","0","Code-Style","","ccfc2376-f203-41a8-9f2f-a76275516833","0"
"d2253273dd1d07be34f56fccc1e5833cbc6a38f1","\Prolog\main.pl","","218:0-218:6","","Traditionally, that cut should be placed as the first predicate just before get_var_info [it basically says: this is the only valid choice don't try any other]\n","0","Code-Style","","055c0ad5-7c1f-43e2-8ec3-e51f56d7ca38","0"
"d2253273dd1d07be34f56fccc1e5833cbc6a38f1","\Prolog\main.pl","","173:6-173:62","","Why? Can it get rid of?","0","Best Practices","","85fa20c1-f856-4115-b517-2bc47aa8a7d4","0"
"d2253273dd1d07be34f56fccc1e5833cbc6a38f1","\Prolog\function_info.pl","","50:22-50:46","","Perhaps if this showed that it is an attribute variable it would be clearer in the tracer. function_ATTR(function_name)?","0","Best Practices","","0324996e-a978-4f28-9e9b-c94dc266c52f","0"
"d2253273dd1d07be34f56fccc1e5833cbc6a38f1","\Prolog\main.pl","","191:0-192:9","","Always put parenthesis around if alternatives \n... ->\n  (...\n  )\n;\n  ...","0","","","103e2006-1394-4cab-9cb1-8a5cf13812b9","0"
"d2253273dd1d07be34f56fccc1e5833cbc6a38f1","\Prolog\main.pl","","198:0-198:48","","And what happens if this fails? No error issued back to the user?","0","","","01d02c4d-1c84-4847-a76d-aaa0c0ada5a4","0"
"d2253273dd1d07be34f56fccc1e5833cbc6a38f1","\Prolog\main.pl","","126:9-126:34","","I don't see the need for this'once' if the predicate find_function_information does not leave choice points.","0","Best Practices","","d8a5a475-5191-48e2-8881-9c9240f12d20","0"
"d2253273dd1d07be34f56fccc1e5833cbc6a38f1","\Prolog\main.pl","","22:0-23:19","","Is this still relevant? I thought you created a Visual Studio project for regression testing.","0","","","7ba8a2b6-ff3e-4ea6-9dec-bbd1b9872898","0"
"d2253273dd1d07be34f56fccc1e5833cbc6a38f1","\Prolog\main.pl","","204:0-204:18","","Only used in regression predicate above","0","","","4a6de6b3-925e-4c43-a714-c8ad4897bc53","0"
"d2253273dd1d07be34f56fccc1e5833cbc6a38f1","\Prolog\utils.pl","","96:0-96:28","","and other functions?","0","","","e46c9506-235f-481c-b81a-d83593ec3693","0"
"d2253273dd1d07be34f56fccc1e5833cbc6a38f1","\Prolog\utils.pl","","8:0-8:61","","See diary","0","Code-Style","","8bc7e754-83f2-44c7-a0d6-aa38d9342a2e","0"
