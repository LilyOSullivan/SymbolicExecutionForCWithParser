sha,filename,url,lines,title,comment,priority,category,additional,id,private
"94cf7a89d56a2dd7232adb3273982a3822d9b145","/Prolog/main.pl","","67:0-69:20","surely this should always be done","clean should probably always be called: loks like teh streams are left open?\n\nLILY: This is a predicate called during development, they streams are normally closed as needed in standard runs. During development, a change may break a predicate and leave streams open, this predicate is used for that case","2","Best Practices","","ada27956-4ffe-4e0b-85f7-b64865ea00c9","1"
"bca17738598636b127e0c6cb87ba68309cd31046","/Prolog/main.pl","","26:0-26:100","Global vars","How do you handle global variables?\nDo you have a regression test with global vars?","0","Architecture","","d076b831-4769-41d3-b7a5-5bb3f4d60276","0"
"62a3480e2f5ed5759430cf6c84818939c012c6ed","/Prolog/label.pl","","91:0-95:110","","This should be at the top of this file, as I understand it is called from the outside and the other label predicates ar ehelpers.","0","Code-Style","","42191b48-5276-4443-87cb-8771f2193de4","0"
"62a3480e2f5ed5759430cf6c84818939c012c6ed","/Prolog/label.pl","","95:0-129:81","","I am not worried about arrays but there's way too much repeated code here","0","","","0ce83e7b-e2d2-4517-9434-6330079f7627","0"
"62a3480e2f5ed5759430cf6c84818939c012c6ed","/Prolog/label.pl","","19:0-29:0","","Again I am not worried about arrays, but this is wrong ALL integers must be sent to the solver for labelling in one go, including arrays elements\n","0","","","d35e13c8-8fb3-4185-a37a-783fc18e2f4c","0"
"95ed1e48170feac866b8173b952efc6cdf4f8df8","/Prolog/declaration.pl","","11:0-13:44","Nmes...","Yes this won't work: how did eileen do it?","3","Architecture","","bb3de17d-a5b8-4bcc-bdbf-ab4c8931d3e0","0"
"efb885a8f623022e1f029e24d4efdddf6f7aee80","/Prolog/utils.pl","","73:0-90:6","","This is mumble jumble to me and I do not understand it.\nPlease tell me how this is used and I am sure there is a much clearer alternative","2","Code-Style","","246f9757-8760-413d-b200-b7c47a9cf805","0"
"efb885a8f623022e1f029e24d4efdddf6f7aee80","/Prolog/label.pl","","85:12-85:34","","I don't understand why this is needed. When is it called?\nalso utils__evaluate_to_int would be redundant and could be removed","2","Code-Style","","0cfd6677-27b8-4f92-94b6-be47f1536735","0"
"94cf7a89d56a2dd7232adb3273982a3822d9b145","/Prolog/statement_handler.pl","","18:0-18:49","","I am confused.\nWhat happens when it is void?\n\nLILY: If a function has no arguments, the atom void is output by the parser. Here, it fails to match to a declaration predicate as it is not using the standard: declaration(Type,[]) format, instead being the atom: void. This filters out the void case","0","","","066fe4ef-e2ee-4dbd-a576-ec23e6eeb64d","1"
"94cf7a89d56a2dd7232adb3273982a3822d9b145","/Prolog/statement_handler.pl","","125:0-143:49","","? What do these do? Work in progress?\n\nLILY: They are in the Expression, and are capable of being passed directly to the handle(assignment) predicate","0","","","f8de0b41-4ce7-403c-9d81-0d11fe647a4d","1"
"ceea8fa9d173c687089999edb8312750a0459c9f","/Prolog/statement_handler.pl","","83:0-88:39","","Duplicated code from expression handling of assignment. Refactor to reduce code duplication","2","","","a2970967-ac5e-48b0-a473-76e0dbd711f2","0"
"ceea8fa9d173c687089999edb8312750a0459c9f","/Prolog/statement_handler.pl","","71:0-71:56","","I fail to understand how this will work for function that do no return a result or modifies global variables.","0","","","303d7fe7-3ab0-4dfa-ba8d-2ba79dd45bbd","0"
"ceea8fa9d173c687089999edb8312750a0459c9f","/Prolog/expressions.pl","","20:4-20:19","","Why is this a special case? \nWould be clearer if ptc_solver__sdl was called within the if_statement handler","0","","","218dcf4c-3c4e-4f38-93aa-7a3933ec8afa","0"
"da02fee953397c8830798481534651b33cfd4dfe","/Prolog/statement_handler.pl","","12:4-12:31","Labelling","You seem to klabel 'on returns' and later you label the params?\nThis needs to be reviewec: at the end of a path all the in variables need to be passed together for labelling to the PTC Solver","0","Architecture","","fd3ccb92-fff7-461f-8b47-ba7fe788affd","0"
"da02fee953397c8830798481534651b33cfd4dfe","/Prolog/test_case_generation.pl","","90:0-94:0","","This is only used once and is very simple: inline these.\nApply this principle everywhere: only declare a separate predicate if it is called more than onece or if it is complex.\nApply this principle everywhere","0","Code-Style","","f8e628fd-a335-4565-85ad-7a6e4ff084ba","0"
"da02fee953397c8830798481534651b33cfd4dfe","/Prolog/test_case_generation.pl","","114:0-116:28","","inline.\nNot useful as a separate predicate","0","Code-Style","","05b1f015-fead-45dd-9535-a0cf8548eac3","0"
"da02fee953397c8830798481534651b33cfd4dfe","/Prolog/test_case_generation.pl","","118:0-131:29","","All this achieves very little.\nInline for now","0","Code-Style","","65bde18b-487e-41ea-8856-0e43b108aa73","0"
